{
	"name": "cs-get-set-gen",
	"displayName": "c#-getter-setter-generator",
	"description": "A simple extension for creating get and set methods for class attributes in C#",
	"version": "0.0.1",
	"engines": {
		"vscode": "^1.56.0"
	},
	"categories": [
		"Other"
	],
	"activationEvents": [
		"onCommand:cs-get-set-gen.create-getter",
		"onCommand:cs-get-set-gen.create-setter",
		"onCommand:cs-get-set-gen.create-getter-and-setter"
	],
	"main": "./dist/extension.js",
	"contributes": {
		"configuration": {
			"title": "C# Getters Setters Gen",
			"properties": {
				"cs-get-set-gen.useLambda": {
					"type": "boolean",
					"default": "false",
					"description": "Whether to use lambda arrow function syntax for getter generation"
				},
				"cs-get-set-gen.getPrefix": {
					"type": "string",
					"default": "get",
					"description": "Prefix for get methods"
				},
				"cs-get-set-gen.setPrefix": {
					"type": "string",
					"default": "set",
					"description": "Prefix for set methods"
				}
			}
		},
		"commands": [
			{
				"command": "cs-get-set-gen.create-getter",
				"title": "C# Getters Setters Gen: Create getter for selection"
			},
			{
				"command": "cs-get-set-gen.create-setter",
				"title": "C# Getters Setters Gen: Create setter for selection"
			},
			{
				"command": "cs-get-set-gen.create-getter-and-setter",
				"title": "C# Getters Setters Gen: Create getter and setter for selection"
			}
		],
		"menus": {
			"editor/context": [
				{
					"when": "resourceLangId == csharp",
					"command": "cs-get-set-gen.create-getter",
					"group": "1_modification"
				},
				{
					"when": "resourceLangId == csharp",
					"command": "cs-get-set-gen.create-setter",
					"group": "1_modification"
				},
				{
					"when": "resourceLangId == csharp",
					"command": "cs-get-set-gen.create-getter-and-setter",
					"group": "1_modification"
				}
			]
		}
	},
	"scripts": {
		"vscode:prepublish": "yarn run package",
		"compile": "webpack",
		"watch": "webpack --watch",
		"package": "webpack --mode production --devtool hidden-source-map",
		"test-compile": "tsc -p ./",
		"test-watch": "tsc -watch -p ./",
		"pretest": "yarn run test-compile && yarn run lint",
		"lint": "eslint src --ext ts",
		"test": "node ./out/test/runTest.js"
	},
	"devDependencies": {
		"@types/vscode": "^1.56.0",
		"@types/glob": "^7.1.3",
		"@types/mocha": "^8.0.4",
		"@types/node": "^12.11.7",
		"eslint": "^7.19.0",
		"@typescript-eslint/eslint-plugin": "^4.14.1",
		"@typescript-eslint/parser": "^4.14.1",
		"glob": "^7.1.6",
		"mocha": "^8.2.1",
		"typescript": "^4.1.3",
		"vscode-test": "^1.5.0",
		"ts-loader": "^8.0.14",
		"webpack": "^5.19.0",
		"webpack-cli": "^4.4.0"
	}
}
